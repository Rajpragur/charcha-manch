rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write their own data
    match /user_profiles/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read and write satisfaction surveys
    match /satisfaction_surveys/{surveyId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write satisfaction surveys (alternative collection name)
    match /satisfaction_surveys/{surveyId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write constituency interactions
    match /constituency_interactions/{interactionId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read global stats, allow write for setup
    match /global_stats/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // Temporarily allow write for setup
    }
    
    // Allow authenticated users to read and write discussion posts
    match /discussion_posts/{postId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write referrals
    match /referrals/{referralId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write department ratings
    match /department_ratings/{ratingId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write constituency scores
    match /constituency_scores/{scoreId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write questionnaire submissions
    match /questionnaire_submissions/{submissionId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write manifesto scores
    match /manifesto_scores/{scoreId} {
      allow read, write: if request.auth != null;
    }
    
    // Users collection - for admin management
    match /users/{userId} {
      // Allow authenticated users to read users collection (admin check handled in app)
      allow read: if request.auth != null;
      // Allow write for admin setup (this will be restricted later)
      allow write: if request.auth != null;
    }
    
    // Admin collection - for admin-specific data
    match /admin/{docId} {
      // Allow read/write for authenticated users during setup
      // This will be restricted to actual admins later
      allow read, write: if request.auth != null;
    }
    

    
    // Constituencies collection - allow public read access, authenticated write
    match /constituencies/{constituencyId} {
      allow read: if true; // Allow public read access
      allow write: if request.auth != null; // Only authenticated users can write
    }
    
    // Constituency scores collection - allow all authenticated users to read, write for now
    match /constituency_scores/{scoreId} {
      allow read, write: if request.auth != null;
    }
    
    // Constituency news collection - allow all authenticated users to read, write for now
    match /constituency_news/{newsId} {
      allow read, write: if request.auth != null;
    }
    
    // Blog likes collection - allow authenticated users to manage their likes
    match /blog_likes/{likeId} {
      allow read, write: if request.auth != null;
    }
    
    // Blog views collection - allow authenticated users to track their views
    match /blog_views/{viewId} {
      allow read, write: if request.auth != null;
    }
    
    // Discussion posts collection - allow authenticated users to create posts, admins to moderate
    match /discussion_posts/{postId} {
      allow read: if true; // Allow public read access
      allow create: if request.auth != null; // Only authenticated users can create
      allow update: if request.auth != null && (
        resource.data.userId == request.auth.uid || // Users can edit their own posts
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' // Admins can edit any post
      );
      allow delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admins can delete
    }
    
    // Comments collection - allow authenticated users to read and write comments
    match /comments/{commentId} {
      allow read: if true; // Allow public read access
      allow create: if request.auth != null; // Only authenticated users can create
      allow update: if request.auth != null && (
        resource.data.userId == request.auth.uid || // Users can edit their own comments
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' // Admins can edit any comment
      );
      allow delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admins can delete
    }
    
    // Post likes collection - allow authenticated users to manage their likes
    match /post_likes/{likeId} {
      allow read: if true; // Allow public read access
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid; // Users can only create likes for themselves
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid; // Users can only manage their own likes
    }
    
    // Comment replies collection - allow authenticated users to read and write replies
    match /comment_replies/{replyId} {
      allow read: if true; // Allow public read access
      allow create: if request.auth != null; // Only authenticated users can create
      allow update: if request.auth != null && (
        resource.data.userId == request.auth.uid || // Users can edit their own replies
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' // Admins can edit any reply
      );
      allow delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Only admins can delete
    }
    
    // Allow public read access to published blogs for better SEO and sharing
    match /blogs/{blogId} {
      allow read: if true; // Allow public read access
      allow write: if request.auth != null; // Only authenticated users can write
    }
    
    // Allow public read access to constituency data for better user experience
    match /constituency_scores/{scoreId} {
      allow read: if true; // Allow public read access
      allow write: if request.auth != null; // Only authenticated users can write
    }
    
    // Allow public read access to global stats
    match /global_stats/{docId} {
      allow read: if true; // Allow public read access
      allow write: if request.auth != null; // Only authenticated users can write
    }
  }
}